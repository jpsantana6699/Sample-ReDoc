openapi: 3.0.3
info:
  title: Sample ReDoc API
  description: |
    Esta é uma API de exemplo para demonstrar como usar o ReDoc para documentação.
    
    ## Funcionalidades
    
    - ✅ Rota Hello World
    - ✅ Status da API
    - ✅ Documentação interativa
    
    ## Tecnologias
    
    - Node.js
    - TypeScript
    - Express.js
    - ReDoc
    
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Servidor de desenvolvimento
  - url: https://api.example.com
    description: Servidor de produção

tags:
  - name: hello
    description: Endpoints de saudação
  - name: system
    description: Endpoints do sistema

paths:
  /api/hello:
    get:
      tags:
        - hello
      summary: Retorna uma saudação
      description: |
        Este endpoint retorna uma mensagem simples de "Hello World".
        É perfeito para testar se a API está funcionando corretamente.
      operationId: getHello
      responses:
        '200':
          description: Saudação retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
              example:
                message: "Hello World"
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/status:
    get:
      tags:
        - system
      summary: Status da API
      description: |
        Retorna o status atual da API, incluindo timestamp e versão.
        Útil para verificar se o serviço está online e funcionando.
      operationId: getStatus
      responses:
        '200':
          description: Status da API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status: "OK"
                timestamp: "2024-01-15T10:30:00.000Z"
                version: "1.0.0"

  /:
    get:
      tags:
        - system
      summary: Informações da API
      description: |
        Endpoint raiz que retorna informações básicas sobre a API
        e links para a documentação.
      operationId: getRoot
      responses:
        '200':
          description: Informações da API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponse'

components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Mensagem de saudação
          example: "Hello World"
      example:
        message: "Hello World"

    StatusResponse:
      type: object
      required:
        - status
        - timestamp
        - version
      properties:
        status:
          type: string
          description: Status atual da API
          enum: [OK, ERROR]
          example: "OK"
        timestamp:
          type: string
          format: date-time
          description: Timestamp da resposta
          example: "2024-01-15T10:30:00.000Z"
        version:
          type: string
          description: Versão da API
          example: "1.0.0"

    RootResponse:
      type: object
      required:
        - message
        - documentation
      properties:
        message:
          type: string
          description: Nome da API
          example: "Sample ReDoc API"
        documentation:
          type: object
          description: Links para documentação
          properties:
            redoc:
              type: string
              format: uri
              description: Link para documentação ReDoc
              example: "http://localhost:3000/docs"
            swagger:
              type: string
              format: uri
              description: Link para Swagger UI
              example: "http://localhost:3000/api-docs"
            openapi:
              type: string
              format: uri
              description: Link para especificação OpenAPI
              example: "http://localhost:3000/api/openapi.json"

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Tipo do erro
          example: "INTERNAL_ERROR"
        message:
          type: string
          description: Mensagem de erro
          example: "Ocorreu um erro interno no servidor"
        details:
          type: string
          description: Detalhes adicionais do erro
          example: "Stack trace ou informações técnicas"
